{"version":3,"sources":["components/Navigation/navigation.module.scss","components/Input/rangecontrol.module.scss","app.module.scss","demo1/styles.module.scss","demo2/styles.module.scss","demo3/styles.module.scss","demo4/styles.module.scss","demo5/styles.module.scss","demo6/styles.module.scss","demo7/styles.module.scss","utils/index.jsx","components/Input/index.jsx","components/Navigation/index.jsx","demo1/index.jsx","demo2/index.jsx","demo3/index.jsx","demo4/index.jsx","demo5/index.jsx","demo6/index.jsx","demo7/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","generateTexture","text","background","textcolor","size","bitmapShift","copyAmount","canvasSize","fontSize","bitmap","document","createElement","width","height","g","getContext","fillStyle","fillRect","font","textWidth","measureText","scale","fillAndShiftText","index","fillText","Array","fill","forEach","item","i","generateStripeTexture","colors","main","second","fontStyle","generateTextRow","shift","Object","values","Input","React","forwardRef","props","ref","useState","val","setVal","handleOnChange","e","target","value","className","styles","wrap","type","labelRange","label","onChange","range","min","max","step","labelText","maxLength","Navigation","showControls","setShowControls","CSSVars","third","isActive","color","style","menu","link","to","activeStyle","controls","toggleControls","backgroundColor","border","onClick","inputs","display","linksBlock","rel","href","Demo1","mount","useRef","textureWidthSlider","textureHeightSlider","textureRotationSlider","textureTextInput","poligonsSlider","speedSlider","useEffect","canvas","current","window","innerWidth","innerHeight","scene","THREE","renderer","antialias","alpha","camera","position","z","torusTexture","textureProps","speed","needsUpdate","wrapS","wrapT","repeat","set","torusMaterial","map","torusGeometry","torus","rotation","x","y","light","add","setSize","renderScene","render","animate","requestAnimationFrame","offset","changeTexture","material","image","addEventListener","aspect","updateProjectionMatrix","geometry","console","log","Inputs","id","Demo2","torArray","torusProps","push","lightTwo","lightThree","lightFour","mouseX","clientX","mouseY","clientY","Demo3","newColors","Demo4","tensionSlider","meshProps","poligons","helixPoint","a","b","t","Math","cos","sin","helixPointsArray","curvePoints","spiralSpline","mesh","meshBox","setFromObject","meshBoxCenter","getCenter","pageX","pageY","scaleVal","toFixed","Demo5","ballTexture","ballMaterial","cameraZoom","Demo6","boxProps","boxTexture","boxMaterial","side","cube","rotateX","rotateY","Demo7","planeProps","planeTexture","planeMaterial","plane","vertices","attributes","array","length","random","App","app","path","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f2aaf069.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"navigation_wrap__ScjoL\",\"menu\":\"navigation_menu__2ZgDU\",\"link\":\"navigation_link__L6qzg\",\"controls\":\"navigation_controls__U5TTa\",\"toggleControls\":\"navigation_toggleControls__pndEE\",\"inputs\":\"navigation_inputs__1tDJp\",\"linksBlock\":\"navigation_linksBlock__3Qs2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"rangecontrol_wrap__3sseU\",\"range\":\"rangecontrol_range__eXrS9\",\"labelRange\":\"rangecontrol_labelRange__2Vnkz\",\"labelText\":\"rangecontrol_labelText__29vee\",\"text\":\"rangecontrol_text__1vEMe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\",\"navigation\":\"app_navigation__2sovO\",\"link\":\"app_link__uBHx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__65wGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__2DckF\",\"controls\":\"styles_controls__1yGab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__2dtKV\",\"controls\":\"styles_controls__3w3q4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__3djDu\",\"controls\":\"styles_controls__2y9PQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__3-b8E\",\"controls\":\"styles_controls__o7SFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__3G2mw\",\"controls\":\"styles_controls__1ROZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__2VBNF\",\"controls\":\"styles_controls__248a0\"};","export const generateTexture = (\n  text,\n  background = \"#ffa1a1\",\n  textcolor = \"blue\",\n  size = 640\n) => {\n  const bitmapShift = 80;\n  const copyAmount = 4;\n  const canvasSize = size;\n  const fontSize = canvasSize / copyAmount;\n\n  const bitmap = document.createElement(\"canvas\");\n  bitmap.width = canvasSize;\n  bitmap.height = canvasSize;\n\n  const g = bitmap.getContext(\"2d\");\n\n  // background\n  g.fillStyle = background;\n  g.fillRect(0, 0, bitmap.width + 80, bitmap.height);\n\n  // text\n  g.fillStyle = \"red\";\n  g.font = `Bold ${fontSize}px Arial`;\n  g.fillStyle = textcolor;\n  const textWidth = g.measureText(text).width;\n  g.scale(canvasSize / textWidth, 1);\n  const fillAndShiftText = (index) =>\n    g.fillText(text, 0, fontSize * ++index - bitmapShift);\n\n  Array(copyAmount + 1)\n    .fill(0)\n    .forEach((item, i) => {\n      fillAndShiftText(i);\n    });\n\n  // document.body.appendChild(bitmap);\n  return bitmap;\n};\n\nexport const generateStripeTexture = (\n  text,\n  colors = { main: \"#ffa1a1\", second: \"blue\" }\n) => {\n  const copyAmount = 2;\n  const canvasSize = 640;\n  const fontSize = canvasSize / copyAmount;\n  const fontStyle = `Bold ${fontSize}px Arial`;\n\n  const bitmap = document.createElement(\"canvas\");\n  const g = bitmap.getContext(\"2d\");\n  g.font = fontStyle;\n  bitmap.width = g.measureText(text).width;\n  bitmap.height = fontSize * 2;\n\n  const generateTextRow = (shift, i) => {\n    // background\n    g.fillStyle = Object.values(colors)[i];\n    g.fillRect(0, shift * i, bitmap.width, bitmap.height);\n\n    // text\n    g.font = `Bold ${fontSize}px Arial`;\n    // g.fillStyle = Object.values(colors)[i];\n    g.fillText(text, 0, fontSize * i - 40);\n    g.fillStyle = Object.values(colors)[0];\n  };\n\n  Array(copyAmount + 1)\n    .fill(0)\n    .forEach((item, i) => {\n      generateTextRow(bitmap.height / 2, i);\n    });\n\n  // text\n  // document.body.appendChild(bitmap);\n  return bitmap;\n};\n","import React from \"react\";\nimport styles from \"./rangecontrol.module.scss\";\n\nconst Input = React.forwardRef((props, ref) => {\n  const [val, setVal] = React.useState(props.val || 0);\n\n  const handleOnChange = (e) => {\n    setVal(e.target.value);\n  };\n\n  const returnInput = () => {\n    if (props.type === \"range\") {\n      return (\n        <>\n          <label className={styles.labelRange}>{props.label}</label>\n          <input\n            onChange={handleOnChange}\n            className={styles.range}\n            type=\"range\"\n            min={props.min}\n            max={props.max}\n            value={val}\n            ref={ref}\n            step={props.step}\n          />\n        </>\n      );\n    }\n    if (props.type === \"text\") {\n      return (\n        <>\n          <label className={styles.labelText}>{props.label}</label>\n          <input\n            onChange={handleOnChange}\n            className={styles.text}\n            type=\"text\"\n            maxLength=\"20\"\n            value={val}\n            ref={ref}\n          />\n        </>\n      );\n    }\n  };\n\n  return <div className={styles.wrap}>{returnInput()}</div>;\n});\n\nexport default Input;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./navigation.module.scss\";\n\nconst Navigation = React.forwardRef((props, ref) => {\n  const [showControls, setShowControls] = React.useState(true);\n\n  const CSSVars = {\n    \"--main-clr\": props.colors.main,\n    \"--second-clr\": props.colors.second,\n    \"--third-clr\": props.colors.third,\n  };\n\n  const isActive = {\n    color: \"var(--second-clr)\",\n  };\n\n  const toggleControls = () => {\n    setShowControls(!showControls);\n  };\n\n  return (\n    <section className={styles.wrap} style={CSSVars}>\n      <div className={styles.menu}>\n        <NavLink className={styles.link} to=\"/torusknot\" activeStyle={isActive}>\n          TorusKnot\n        </NavLink>\n        <NavLink className={styles.link} to=\"/donut\" activeStyle={isActive}>\n          Donut\n        </NavLink>\n        <NavLink\n          className={styles.link}\n          to=\"/donutstripes\"\n          activeStyle={isActive}\n        >\n          Donut Stripes\n        </NavLink>\n        <NavLink className={styles.link} to=\"/spiral\" activeStyle={isActive}>\n          Spiral\n        </NavLink>\n        <NavLink className={styles.link} to=\"/sphere\" activeStyle={isActive}>\n          Sphere\n        </NavLink>\n        <NavLink className={styles.link} to=\"/cube\" activeStyle={isActive}>\n          Cube\n        </NavLink>\n        <NavLink className={styles.link} to=\"/waterfall\" activeStyle={isActive}>\n          Waterfall\n        </NavLink>\n      </div>\n      <div className={styles.controls}>\n        <div\n          className={styles.toggleControls}\n          style={\n            showControls\n              ? null\n              : {\n                  backgroundColor: \"transparent\",\n                  border: \"2px var(--main-clr) solid\",\n                  color: \"var(--main-clr)\",\n                }\n          }\n          onClick={toggleControls}\n        >\n          {showControls ? \"Hide controls ⤒\" : \"Show controls ⤓\"}\n        </div>\n        <div\n          className={styles.inputs}\n          style={{ display: showControls ? null : \"none\" }}\n        >\n          {props.inputs}\n        </div>\n      </div>\n      <div className={styles.linksBlock}>\n        <a\n          className={styles.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/PavelLaptev/kinetik-typography-three-js\"\n        >\n          Github\n        </a>\n        <a\n          className={styles.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://medium.com/@PavelLaptev/kinetictypography-with-threejs-2bed948720a2\"\n        >\n          Article\n        </a>\n      </div>\n    </section>\n  );\n});\n\nexport default Navigation;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport * as THREE from \"three\";\nimport { generateStripeTexture } from \"./../utils\";\n\nimport Input from \"../components/Input\";\nimport Navigation from \"../components/Navigation\";\n\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst Demo1 = (props) => {\n  const mount = React.useRef(null);\n  const textureWidthSlider = React.useRef(null);\n  const textureHeightSlider = React.useRef(null);\n  const textureRotationSlider = React.useRef(null);\n  const textureTextInput = React.useRef(null);\n  const poligonsSlider = React.useRef(null);\n  const speedSlider = React.useRef(null);\n\n  React.useEffect(() => {\n    const canvas = mount.current;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: false,\n      alpha: true,\n    });\n\n    // CAMERA\n    const camera = new THREE.PerspectiveCamera(80, width / height, 0.1, 100);\n    camera.position.z = 20;\n\n    // TEXTURE\n    const torusTexture = new THREE.Texture(\n      generateStripeTexture(textureTextInput.current.value)\n    );\n    let textureProps = {\n      width: 20,\n      height: 6,\n      speed: 0.009,\n    };\n\n    torusTexture.needsUpdate = true;\n    torusTexture.wrapS = THREE.RepeatWrapping;\n    torusTexture.wrapT = THREE.RepeatWrapping;\n    torusTexture.repeat.set(\n      textureWidthSlider.current.value,\n      textureHeightSlider.current.value\n    );\n    const torusMaterial = new THREE.MeshPhongMaterial({ map: torusTexture });\n\n    // OBJECTS\n    const torusGeometry = new THREE.TorusKnotBufferGeometry(\n      20,\n      8,\n      poligonsSlider.current.value,\n      24\n    );\n    const torus = new THREE.Mesh(torusGeometry, torusMaterial);\n    torus.rotation.x = -50;\n    torus.rotation.z = 100;\n    torus.position.y = 2;\n\n    // LIGHT\n    const light = new THREE.AmbientLight(0xffffff);\n\n    // SCENE\n    scene.add(torus, light);\n    renderer.setSize(width, height);\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    // FUNCTIONS\n    const animate = () => {\n      requestAnimationFrame(animate);\n      torusTexture.offset.y -= textureProps.speed;\n      torus.rotation.z -= 0.01;\n      renderScene();\n    };\n\n    // INIT\n    animate();\n\n    // RESIZE\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    // TEXTURE CHANGES\n    const changeTexture = {\n      width: (e) => {\n        textureProps.width = e.target.value;\n        torusTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      height: (e) => {\n        textureProps.height = e.target.value;\n        torusTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      rotation: (e) => {\n        torusTexture.rotation = e.target.value / 10;\n      },\n      text: (e) => {\n        torus.material.map.image = generateStripeTexture(e.target.value);\n        torus.material.map.needsUpdate = true;\n      },\n      handleSpeed: (e) => {\n        textureProps.speed = e.target.value / 1000;\n      },\n    };\n\n    const handlePoligons = (e) => {\n      torus.geometry = new THREE.TorusKnotBufferGeometry(\n        20,\n        8,\n        e.target.value,\n        24\n      );\n    };\n\n    // WATCHERS\n    window.addEventListener(\"resize\", handleResize);\n    textureWidthSlider.current.addEventListener(\"change\", changeTexture.width);\n    textureHeightSlider.current.addEventListener(\n      \"change\",\n      changeTexture.height\n    );\n    textureRotationSlider.current.addEventListener(\n      \"change\",\n      changeTexture.rotation\n    );\n    textureTextInput.current.addEventListener(\"change\", changeTexture.text);\n    poligonsSlider.current.addEventListener(\"change\", handlePoligons);\n    speedSlider.current.addEventListener(\"change\", changeTexture.handleSpeed);\n\n    return () => {\n      console.log(\"**CURSOR UNMOUNTED**\");\n    };\n  }, []);\n\n  const Inputs = () => {\n    return (\n      <>\n        <Input\n          type=\"range\"\n          ref={textureWidthSlider}\n          label=\"Width\"\n          min=\"4\"\n          max=\"60\"\n          val=\"20\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureHeightSlider}\n          label=\"Height\"\n          min=\"1\"\n          max=\"60\"\n          val=\"6\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureRotationSlider}\n          label=\"Rotation\"\n          min=\"0\"\n          max=\"60\"\n          val=\"0\"\n        />\n        <Input type=\"text\" ref={textureTextInput} label=\"Text\" val=\"YOUCAN\" />\n        <Input\n          type=\"range\"\n          ref={speedSlider}\n          label=\"Speed\"\n          min=\"1\"\n          max=\"100\"\n          val=\"10\"\n        />\n        <Input\n          type=\"range\"\n          ref={poligonsSlider}\n          label=\"Poligons\"\n          min=\"3\"\n          max=\"100\"\n          val=\"80\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <Navigation\n        inputs={<Inputs />}\n        colors={{ main: \"black\", second: \"#F2A5A3\", third: \"white\" }}\n      />\n      <canvas ref={mount} id=\"c\" />\n    </div>\n  );\n};\n\nexport default Demo1;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport * as THREE from \"three\";\nimport { generateTexture } from \"./../utils\";\n\nimport Input from \"../components/Input\";\nimport Navigation from \"../components/Navigation\";\n\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst Demo2 = (props) => {\n  const mount = React.useRef(null);\n  const textureWidthSlider = React.useRef(null);\n  const textureHeightSlider = React.useRef(null);\n  const textureRotationSlider = React.useRef(null);\n  const textureTextInput = React.useRef(null);\n  const poligonsSlider = React.useRef(null);\n  const speedSlider = React.useRef(null);\n\n  React.useEffect(() => {\n    const canvas = mount.current;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: false,\n      alpha: true,\n    });\n\n    // CAMERA\n    const camera = new THREE.PerspectiveCamera(90, width / height, 0.1, 1000);\n    camera.position.z = 20;\n\n    // TEXTURE\n    const torusTexture = new THREE.Texture(\n      generateTexture(textureTextInput.current.value)\n    );\n    let textureProps = {\n      width: 20,\n      height: 5,\n      speed: 0.009,\n    };\n\n    torusTexture.needsUpdate = true;\n    torusTexture.wrapS = THREE.RepeatWrapping;\n    torusTexture.wrapT = THREE.RepeatWrapping;\n    torusTexture.repeat.set(\n      textureWidthSlider.current.value,\n      textureHeightSlider.current.value\n    );\n    const torusMaterial = new THREE.MeshPhongMaterial({ map: torusTexture });\n\n    // OBJ ARRAYS\n    let torArray = [];\n    let torusProps = [28, 9.8, 40];\n\n    // OBJECTS\n    Array(5)\n      .fill(0)\n      .forEach((item, i) => {\n        const torusGeometry = new THREE.TorusBufferGeometry(\n          ...torusProps,\n          poligonsSlider.current.value\n        );\n        const torus = new THREE.Mesh(torusGeometry, torusMaterial);\n        torArray.push(torus);\n        torus.position.z = -i * i * 12;\n        scene.add(torus);\n      });\n\n    // LIGHT\n    const light = new THREE.PointLight(\"rgb(100%, 80%, 10%)\", 1.5, 100);\n    light.position.set(0, 0, -20);\n    scene.add(light);\n\n    const lightTwo = new THREE.PointLight(\"rgb(0%, 0%, 100%)\", 0.5, 100);\n    lightTwo.position.set(0, 0, -180);\n    scene.add(lightTwo);\n\n    const lightThree = new THREE.PointLight(\"rgb(10%, 0%, 100%)\", 1, 100);\n    lightThree.position.set(0, 0, -10);\n    scene.add(lightThree);\n\n    const lightFour = new THREE.AmbientLight(\"rgb(0%, 0%, 100%)\", 1, 100);\n    lightFour.position.set(0, 0, -100);\n    scene.add(lightFour);\n\n    // SCENE\n    renderer.setSize(width, height);\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    // FUNCTIONS\n    const animate = () => {\n      requestAnimationFrame(animate);\n      torusTexture.offset.y -= textureProps.speed;\n      // torus.rotation.z -= 0.01;\n      torArray.forEach((item, i) => {\n        item.rotation.z += 0.01 * i + 0.002;\n      });\n      renderScene();\n    };\n\n    // INIT\n    animate();\n\n    // RESIZE\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    // TEXTURE CHANGES\n    const changeTexture = {\n      width: (e) => {\n        textureProps.width = e.target.value;\n        torusTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      height: (e) => {\n        textureProps.height = e.target.value;\n        torusTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      rotation: (e) => {\n        torusTexture.rotation = e.target.value / 10;\n        renderScene();\n      },\n      text: (e) => {\n        torusMaterial.map.image = generateTexture(e.target.value);\n        torusMaterial.map.needsUpdate = true;\n      },\n      handleSpeed: (e) => {\n        textureProps.speed = e.target.value / 1000;\n      },\n    };\n\n    const handlePoligons = (e) => {\n      torArray.forEach((item, i) => {\n        item.geometry = new THREE.TorusBufferGeometry(\n          ...torusProps,\n          e.target.value\n        );\n      });\n    };\n\n    const handleMouseMove = (e) => {\n      // Update the mouse variable\n      let mouseX = (e.clientX / window.innerWidth) * 4 - 1;\n      let mouseY = -(e.clientY / window.innerHeight) * 4 + 1;\n\n      light.position.set(mouseX * -6, mouseY * -6, -20);\n\n      torArray.forEach((torus, i) => {\n        torus.position.x = mouseX;\n        torus.position.y = mouseY;\n      });\n    };\n\n    // WATCHERS\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    textureWidthSlider.current.addEventListener(\"change\", changeTexture.width);\n    textureHeightSlider.current.addEventListener(\n      \"change\",\n      changeTexture.height\n    );\n    textureRotationSlider.current.addEventListener(\n      \"change\",\n      changeTexture.rotation\n    );\n    textureTextInput.current.addEventListener(\"change\", changeTexture.text);\n    speedSlider.current.addEventListener(\"change\", changeTexture.handleSpeed);\n    poligonsSlider.current.addEventListener(\"change\", handlePoligons);\n\n    return () => {\n      console.log(\"**CURSOR UNMOUNTED**\");\n    };\n  }, []);\n\n  const Inputs = () => {\n    return (\n      <>\n        <Input\n          type=\"range\"\n          ref={textureWidthSlider}\n          label=\"Width\"\n          min=\"2\"\n          max=\"60\"\n          val=\"6\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureHeightSlider}\n          label=\"Height\"\n          min=\"1\"\n          max=\"60\"\n          val=\"5\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureRotationSlider}\n          label=\"Rotation\"\n          min=\"0\"\n          max=\"60\"\n          val=\"0\"\n        />\n        <Input type=\"text\" ref={textureTextInput} label=\"Text\" val=\"YOUCAN\" />\n        <Input\n          type=\"range\"\n          ref={speedSlider}\n          label=\"Speed\"\n          min=\"1\"\n          max=\"100\"\n          val=\"10\"\n        />\n        <Input\n          type=\"range\"\n          ref={poligonsSlider}\n          label=\"Poligons\"\n          min=\"3\"\n          max=\"30\"\n          val=\"30\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <Navigation\n        inputs={<Inputs />}\n        colors={{ main: \"#010032\", second: \"#EF92F9\", third: \"white\" }}\n      />\n      <canvas ref={mount} id=\"c\" />\n    </div>\n  );\n};\n\nexport default Demo2;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport * as THREE from \"three\";\n\nimport Input from \"../components/Input\";\nimport Navigation from \"../components/Navigation\";\n\nimport { generateStripeTexture } from \"./../utils\";\n\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst Demo3 = (props) => {\n  const mount = React.useRef(null);\n  const textureWidthSlider = React.useRef(null);\n  const textureHeightSlider = React.useRef(null);\n  const textureRotationSlider = React.useRef(null);\n  const textureTextInput = React.useRef(null);\n  const poligonsSlider = React.useRef(null);\n  const speedSlider = React.useRef(null);\n\n  React.useEffect(() => {\n    const canvas = mount.current;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: false,\n      alpha: true,\n    });\n\n    // CAMERA\n    const camera = new THREE.PerspectiveCamera(90, width / height, 0.1, 1000);\n    camera.position.z = 20;\n\n    // TEXTURE\n    const torusTexture = new THREE.Texture(\n      generateStripeTexture(textureTextInput.current.value)\n    );\n    let textureProps = {\n      width: 20,\n      height: 5,\n      speed: 0.009,\n    };\n\n    torusTexture.needsUpdate = true;\n    torusTexture.wrapS = THREE.RepeatWrapping;\n    torusTexture.wrapT = THREE.RepeatWrapping;\n    torusTexture.repeat.set(\n      textureWidthSlider.current.value,\n      textureHeightSlider.current.value\n    );\n    const torusMaterial = new THREE.MeshPhongMaterial({ map: torusTexture });\n\n    // OBJ ARRAYS\n    let torArray = [];\n    let torusProps = [28, 9.8, 40];\n\n    // OBJECTS\n    Array(5)\n      .fill(0)\n      .forEach((item, i) => {\n        const torusGeometry = new THREE.TorusBufferGeometry(\n          ...torusProps,\n          poligonsSlider.current.value\n        );\n        const torus = new THREE.Mesh(torusGeometry, torusMaterial);\n        torArray.push(torus);\n        torus.position.z = -i * i * 12;\n        scene.add(torus);\n      });\n\n    // LIGHT\n    const light = new THREE.PointLight(\"rgb(100%, 80%, 10%)\", 1.5, 100);\n    light.position.set(0, 0, -20);\n    scene.add(light);\n\n    const lightTwo = new THREE.PointLight(\"rgb(0%, 0%, 100%)\", 0.5, 100);\n    lightTwo.position.set(0, 0, -180);\n    scene.add(lightTwo);\n\n    const lightThree = new THREE.PointLight(\"rgb(10%, 0%, 100%)\", 1, 100);\n    lightThree.position.set(0, 0, -10);\n    scene.add(lightThree);\n\n    const lightFour = new THREE.AmbientLight(\"rgb(0%, 0%, 100%)\", 1, 100);\n    lightFour.position.set(0, 0, -100);\n    scene.add(lightFour);\n\n    // SCENE\n    renderer.setSize(width, height);\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    // FUNCTIONS\n    const animate = () => {\n      requestAnimationFrame(animate);\n      torusTexture.offset.y -= textureProps.speed;\n      // torus.rotation.z -= 0.01;\n      torArray.forEach((item, i) => {\n        item.rotation.z += 0.01 * i + 0.002;\n      });\n      renderScene();\n    };\n\n    // INIT\n    animate();\n\n    // RESIZE\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    // TEXTURE CHANGES\n    const changeTexture = {\n      width: (e) => {\n        textureProps.width = e.target.value;\n        torusTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      height: (e) => {\n        textureProps.height = e.target.value;\n        torusTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      rotation: (e) => {\n        torusTexture.rotation = e.target.value / 10;\n        renderScene();\n      },\n      text: (e) => {\n        torusMaterial.map.image = generateStripeTexture(e.target.value);\n        torusMaterial.map.needsUpdate = true;\n      },\n      handleSpeed: (e) => {\n        textureProps.speed = e.target.value / 1000;\n      },\n    };\n\n    const handlePoligons = (e) => {\n      torArray.forEach((item, i) => {\n        item.geometry = new THREE.TorusBufferGeometry(\n          ...torusProps,\n          e.target.value\n        );\n      });\n    };\n\n    const handleMouseMove = (e) => {\n      // Update the mouse variable\n      let mouseX = (e.clientX / window.innerWidth) * 4 - 1;\n      let mouseY = -(e.clientY / window.innerHeight) * 4 + 1;\n\n      light.position.set(mouseX * -6, mouseY * -6, -20 + mouseY * 6);\n\n      torArray.forEach((torus, i) => {\n        torus.position.x = mouseX;\n        torus.position.y = mouseY;\n      });\n    };\n\n    // WATCHERS\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    textureWidthSlider.current.addEventListener(\"change\", changeTexture.width);\n    textureHeightSlider.current.addEventListener(\n      \"change\",\n      changeTexture.height\n    );\n    textureRotationSlider.current.addEventListener(\n      \"change\",\n      changeTexture.rotation\n    );\n    textureTextInput.current.addEventListener(\"change\", changeTexture.text);\n    speedSlider.current.addEventListener(\"change\", changeTexture.handleSpeed);\n    poligonsSlider.current.addEventListener(\"change\", handlePoligons);\n\n    return () => {\n      console.log(\"**CURSOR UNMOUNTED**\");\n    };\n  }, []);\n\n  const Inputs = () => {\n    return (\n      <>\n        <Input\n          type=\"range\"\n          ref={textureWidthSlider}\n          label=\"Width\"\n          min=\"2\"\n          max=\"60\"\n          val=\"6\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureHeightSlider}\n          label=\"Height\"\n          min=\"1\"\n          max=\"60\"\n          val=\"5\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureRotationSlider}\n          label=\"Rotation\"\n          min=\"0\"\n          max=\"60\"\n          val=\"0\"\n        />\n        <Input type=\"text\" ref={textureTextInput} label=\"Text\" val=\"YOUCAN\" />\n        <Input\n          type=\"range\"\n          ref={speedSlider}\n          label=\"Speed\"\n          min=\"1\"\n          max=\"100\"\n          val=\"10\"\n        />\n        <Input\n          type=\"range\"\n          ref={poligonsSlider}\n          label=\"Poligons\"\n          min=\"3\"\n          max=\"30\"\n          val=\"30\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <Navigation\n        inputs={<Inputs />}\n        colors={{ main: \"#010032\", second: \"#EF92F9\", third: \"white\" }}\n      />\n      <canvas ref={mount} id=\"c\" />\n    </div>\n  );\n};\n\nexport default Demo3;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport * as THREE from \"three\";\n\nimport Input from \"../components/Input\";\nimport Navigation from \"../components/Navigation\";\n\nimport { generateStripeTexture } from \"../utils\";\n\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst newColors = {\n  main: \"#deff00\",\n  second: \"#FA3749\",\n};\n\nconst Demo4 = (props) => {\n  const mount = React.useRef(null);\n  const textureWidthSlider = React.useRef(null);\n  const textureHeightSlider = React.useRef(null);\n  const textureTextInput = React.useRef(null);\n  const poligonsSlider = React.useRef(null);\n  const speedSlider = React.useRef(null);\n  const tensionSlider = React.useRef(null);\n\n  React.useEffect(() => {\n    const canvas = mount.current;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: false,\n      alpha: true,\n    });\n\n    // TEXTURE\n    const torusTexture = new THREE.Texture(\n      generateStripeTexture(textureTextInput.current.value, newColors)\n    );\n    let meshProps = {\n      width: 30,\n      height: 1,\n      speed: 0.009,\n      poligons: 160,\n    };\n\n    torusTexture.needsUpdate = true;\n    torusTexture.wrapS = THREE.RepeatWrapping;\n    torusTexture.wrapT = THREE.RepeatWrapping;\n    torusTexture.repeat.set(\n      textureWidthSlider.current.value,\n      textureHeightSlider.current.value\n    );\n    const torusMaterial = new THREE.MeshPhongMaterial({ map: torusTexture });\n\n    // OBJECT\n    const helixPoint = (a, b, t) => {\n      return new THREE.Vector3(-a * Math.cos(t), -b * t, a * Math.sin(t));\n    };\n\n    const helixPointsArray = (a, b) => {\n      const curvePoints = [];\n\n      for (let t = -20; t < 20; t += 1) {\n        curvePoints.push(helixPoint(a, b, t));\n      }\n      return curvePoints;\n    };\n\n    let spiralSpline = new THREE.CatmullRomCurve3(helixPointsArray(80, 6));\n\n    let geometry = new THREE.TubeBufferGeometry(\n      spiralSpline,\n      140,\n      16,\n      2,\n      false\n    );\n\n    const mesh = new THREE.Mesh(geometry, torusMaterial);\n    scene.add(mesh);\n\n    // Correct Y position\n    var meshBox = new THREE.Box3().setFromObject(mesh);\n    const meshBoxCenter = new THREE.Vector3();\n    mesh.position.y = -meshBox.getCenter(meshBoxCenter).y;\n\n    // CAMERA\n    const camera = new THREE.PerspectiveCamera(400, width / height, 0.1, 1000);\n    camera.position.z = 200;\n\n    // LIGHT\n    const light = new THREE.AmbientLight(\"rgb(100%, 100%, 100%)\", 1.2, 2500);\n    light.position.set(-200, 30, -30);\n    scene.add(light);\n\n    // SCENE\n    renderer.setSize(width, height);\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    // FUNCTIONS\n    const animate = () => {\n      requestAnimationFrame(animate);\n      torusTexture.offset.x -= meshProps.speed;\n      camera.rotation.z += 0.001;\n      renderScene();\n    };\n\n    // INIT\n    animate();\n\n    // RESIZE\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    // TEXTURE CHANGES\n    const changeTexture = {\n      width: (e) => {\n        meshProps.width = e.target.value;\n        torusTexture.repeat.set(meshProps.width, meshProps.height);\n      },\n      height: (e) => {\n        meshProps.height = e.target.value;\n        torusTexture.repeat.set(meshProps.width, meshProps.height);\n      },\n      text: (e) => {\n        torusMaterial.map.image = generateStripeTexture(\n          e.target.value,\n          newColors\n        );\n        torusMaterial.map.needsUpdate = true;\n      },\n      handleSpeed: (e) => {\n        meshProps.speed = e.target.value / 1000;\n      },\n    };\n\n    const handleMouseMove = (e) => {\n      let mouseX = e.pageX - window.innerWidth / 2;\n      let mouseY = e.pageY - window.innerHeight / 2;\n\n      mesh.rotation.z = mouseX / 2000;\n      mesh.rotation.x = mouseY / 1000;\n      mesh.rotation.y = -mouseY / 100;\n\n      const scaleVal = () => {\n        let val = (1 + mouseY / 1000).toFixed(2);\n        let min = 1;\n        let max = 1.7;\n\n        if (val >= min && val <= max) {\n          return val;\n        }\n\n        if (val < min) {\n          return min;\n        }\n\n        if (val > max) {\n          return max;\n        }\n      };\n\n      mesh.scale.set(scaleVal(), 1, scaleVal());\n    };\n\n    const handlePoligons = (e) => {\n      meshProps.poligons = e.target.value;\n      mesh.geometry = new THREE.TubeBufferGeometry(\n        spiralSpline,\n        meshProps.poligons,\n        16,\n        2,\n        false\n      );\n    };\n\n    const handleTension = (e) => {\n      spiralSpline = new THREE.CatmullRomCurve3(\n        helixPointsArray(80, e.target.value)\n      );\n\n      mesh.geometry = new THREE.TubeBufferGeometry(\n        spiralSpline,\n        meshProps.poligons,\n        16,\n        2,\n        false\n      );\n    };\n\n    // WATCHERS\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    textureWidthSlider.current.addEventListener(\"change\", changeTexture.width);\n    textureHeightSlider.current.addEventListener(\n      \"change\",\n      changeTexture.height\n    );\n    textureTextInput.current.addEventListener(\"change\", changeTexture.text);\n    speedSlider.current.addEventListener(\"change\", changeTexture.handleSpeed);\n    poligonsSlider.current.addEventListener(\"change\", handlePoligons);\n    tensionSlider.current.addEventListener(\"change\", handleTension);\n\n    return () => {\n      console.log(\"**CURSOR UNMOUNTED**\");\n    };\n  }, []);\n\n  const Inputs = () => {\n    return (\n      <>\n        <Input\n          type=\"range\"\n          ref={textureWidthSlider}\n          label=\"Width\"\n          min=\"2\"\n          max=\"60\"\n          val=\"16\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureHeightSlider}\n          label=\"Height\"\n          min=\"1\"\n          max=\"8\"\n          val=\"1\"\n        />\n        <Input type=\"text\" ref={textureTextInput} label=\"Text\" val=\"YOUCAN\" />\n        <Input\n          type=\"range\"\n          ref={speedSlider}\n          label=\"Speed\"\n          min=\"1\"\n          max=\"100\"\n          val=\"10\"\n        />\n        <Input\n          type=\"range\"\n          ref={poligonsSlider}\n          label=\"Poligons\"\n          min=\"8\"\n          step=\"8\"\n          max=\"240\"\n          val=\"160\"\n        />\n        <Input\n          type=\"range\"\n          ref={tensionSlider}\n          label=\"Tension\"\n          min=\"2\"\n          max=\"18\"\n          val=\"6\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <Navigation\n        inputs={<Inputs />}\n        colors={{\n          main: newColors.second,\n          second: newColors.main,\n          third: \"white\",\n        }}\n      />\n      <canvas ref={mount} id=\"c\" />\n    </div>\n  );\n};\n\nexport default Demo4;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport * as THREE from \"three\";\n\nimport Input from \"../components/Input\";\nimport Navigation from \"../components/Navigation\";\n\nimport { generateStripeTexture } from \"../utils\";\n\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst newColors = {\n  main: \"#3A3A3A\",\n  second: \"#DEDEDE\",\n  third: \"#3A3A3A\",\n};\n\nconst Demo5 = (props) => {\n  const mount = React.useRef(null);\n  const textureWidthSlider = React.useRef(null);\n  const textureHeightSlider = React.useRef(null);\n  const textureTextInput = React.useRef(null);\n  const poligonsSlider = React.useRef(null);\n  const speedSlider = React.useRef(null);\n\n  React.useEffect(() => {\n    const canvas = mount.current;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: false,\n      alpha: true,\n    });\n\n    // TEXTURE\n    const ballTexture = new THREE.Texture(\n      generateStripeTexture(textureTextInput.current.value, newColors)\n    );\n\n    ballTexture.needsUpdate = true;\n    ballTexture.wrapS = THREE.RepeatWrapping;\n    ballTexture.wrapT = THREE.RepeatWrapping;\n    ballTexture.repeat.set(\n      textureWidthSlider.current.value,\n      textureHeightSlider.current.value\n    );\n    const ballMaterial = new THREE.MeshPhongMaterial({ map: ballTexture });\n\n    // OBJECT\n    let meshProps = {\n      height: 4,\n      width: 4,\n      scale: 30,\n      speed: 0.009,\n      poligons: 32,\n    };\n\n    const geometry = new THREE.SphereGeometry(\n      meshProps.scale,\n      meshProps.poligons,\n      meshProps.poligons\n    );\n\n    const mesh = new THREE.Mesh(geometry, ballMaterial);\n    mesh.rotation.z = 45;\n    mesh.rotation.x = 550;\n    mesh.rotation.y = -206;\n    scene.add(mesh);\n\n    // CAMERA\n    const camera = new THREE.PerspectiveCamera(400, width / height, 0.1, 1000);\n    camera.position.z = 80;\n\n    // LIGHT\n    const light = new THREE.AmbientLight(\"rgb(100%, 100%, 100%)\", 1, 2500);\n    light.position.set(-200, 30, -30);\n    scene.add(light);\n\n    // SCENE\n    renderer.setSize(width, height);\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    // FUNCTIONS\n    const animate = () => {\n      requestAnimationFrame(animate);\n      ballTexture.offset.y -= meshProps.speed;\n      camera.rotation.z += 0.001;\n      renderScene();\n    };\n\n    // INIT\n    animate();\n\n    // RESIZE\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    // TEXTURE CHANGES\n    const changeTexture = {\n      width: (e) => {\n        meshProps.width = e.target.value;\n        ballTexture.repeat.set(meshProps.width, meshProps.height);\n      },\n      height: (e) => {\n        meshProps.height = e.target.value;\n        ballTexture.repeat.set(meshProps.width, meshProps.height);\n      },\n      text: (e) => {\n        ballMaterial.map.image = generateStripeTexture(\n          e.target.value,\n          newColors\n        );\n        ballMaterial.map.needsUpdate = true;\n      },\n      handleSpeed: (e) => {\n        meshProps.speed = e.target.value / 1000;\n      },\n    };\n\n    const handleMouseMove = (e) => {\n      let mouseX = e.pageX - window.innerWidth / 2;\n      let mouseY = e.pageY - window.innerHeight / 2;\n\n      mesh.rotation.x = mouseY / 200;\n      mesh.rotation.y = mouseX / 200;\n\n      let cameraZoom = 70 + -mouseX * 0.1;\n\n      if (cameraZoom < 60) {\n        camera.position.z = 60;\n      } else if (cameraZoom > 100) {\n        camera.position.z = 100;\n      } else {\n        camera.position.z = cameraZoom;\n      }\n    };\n\n    const handlePoligons = (e) => {\n      meshProps.poligons = e.target.value;\n      mesh.geometry = new THREE.SphereGeometry(\n        meshProps.scale,\n        meshProps.poligons,\n        meshProps.poligons\n      );\n    };\n\n    // WATCHERS\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    poligonsSlider.current.addEventListener(\"change\", handlePoligons);\n\n    textureWidthSlider.current.addEventListener(\"change\", changeTexture.width);\n    textureHeightSlider.current.addEventListener(\n      \"change\",\n      changeTexture.height\n    );\n    textureTextInput.current.addEventListener(\"change\", changeTexture.text);\n    speedSlider.current.addEventListener(\"change\", changeTexture.handleSpeed);\n\n    return () => {\n      console.log(\"**CURSOR UNMOUNTED**\");\n    };\n  }, []);\n\n  const Inputs = () => {\n    return (\n      <>\n        <Input\n          type=\"range\"\n          ref={textureWidthSlider}\n          label=\"Width\"\n          min=\"2\"\n          max=\"40\"\n          val=\"4\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureHeightSlider}\n          label=\"Height\"\n          min=\"1\"\n          max=\"20\"\n          val=\"4\"\n        />\n        <Input type=\"text\" ref={textureTextInput} label=\"Text\" val=\"YOUCAN\" />\n        <Input\n          type=\"range\"\n          ref={speedSlider}\n          label=\"Speed\"\n          min=\"1\"\n          max=\"100\"\n          val=\"10\"\n        />\n        <Input\n          type=\"range\"\n          ref={poligonsSlider}\n          label=\"Poligons\"\n          min=\"2\"\n          step=\"1\"\n          max=\"64\"\n          val=\"32\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <Navigation\n        inputs={<Inputs />}\n        colors={{\n          main: \"#232323\",\n          second: \"#949494\",\n          third: \"white\",\n        }}\n      />\n      <canvas ref={mount} id=\"c\" />\n    </div>\n  );\n};\n\nexport default Demo5;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport * as THREE from \"three\";\n\nimport Input from \"../components/Input\";\nimport Navigation from \"../components/Navigation\";\n\nimport { generateStripeTexture } from \"../utils\";\n\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst newColors = {\n  main: \"#8e00ff\",\n  second: \"#b3ff42\",\n  third: \"#8e00ff\",\n};\n\nconst Demo6 = (props) => {\n  const mount = React.useRef(null);\n  const textureWidthSlider = React.useRef(null);\n  const textureHeightSlider = React.useRef(null);\n  const textureTextInput = React.useRef(null);\n  const speedSlider = React.useRef(null);\n\n  React.useEffect(() => {\n    const canvas = mount.current;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: false,\n      alpha: true,\n    });\n\n    // PROPS\n    let boxProps = {\n      scale: 12,\n      poligons: 1,\n    };\n\n    let textureProps = {\n      speed: 0.009,\n      height: 2,\n      width: 3,\n    };\n\n    // TEXTURE\n    const boxTexture = new THREE.Texture(\n      generateStripeTexture(textureTextInput.current.value, newColors)\n    );\n\n    boxTexture.needsUpdate = true;\n    boxTexture.wrapS = THREE.RepeatWrapping;\n    boxTexture.wrapT = THREE.RepeatWrapping;\n    boxTexture.repeat.set(-textureProps.height, textureProps.width);\n    const boxMaterial = new THREE.MeshPhongMaterial({\n      map: boxTexture,\n      side: THREE.BackSide,\n    });\n\n    // OBJECT\n    const geometry = new THREE.BoxGeometry(\n      boxProps.scale,\n      boxProps.scale,\n      boxProps.scale,\n      boxProps.poligons,\n      boxProps.poligons,\n      boxProps.poligons\n    );\n\n    const cube = new THREE.Mesh(geometry, boxMaterial);\n    cube.rotateX(0.5);\n    cube.rotateY(-0.7);\n\n    scene.add(cube);\n\n    // CAMERA\n    const camera = new THREE.PerspectiveCamera(110, width / height, 1, 1100);\n    camera.position.z = 2;\n\n    // LIGHT\n    const light = new THREE.PointLight(\"rgb(100%, 100%, 100%)\", 1, 1500);\n    light.position.set(0, 0, 0);\n    scene.add(light);\n\n    // SCENE\n    renderer.setSize(width, height);\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    // FUNCTIONS\n    const animate = () => {\n      requestAnimationFrame(animate);\n      boxTexture.offset.x -= textureProps.speed;\n      boxTexture.offset.z -= textureProps.speed;\n      boxTexture.offset.y -= textureProps.speed;\n      boxTexture.rotation -= textureProps.speed / 2;\n      camera.rotation.z += 0.001;\n      renderScene();\n    };\n\n    // INIT\n    animate();\n\n    // RESIZE\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    // TEXTURE CHANGES\n    const changeTexture = {\n      width: (e) => {\n        textureProps.width = e.target.value;\n        boxTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      height: (e) => {\n        textureProps.height = e.target.value;\n        boxTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      text: (e) => {\n        boxMaterial.map.image = generateStripeTexture(\n          e.target.value,\n          newColors\n        );\n        boxMaterial.map.needsUpdate = true;\n      },\n      handleSpeed: (e) => {\n        textureProps.speed = e.target.value / 1000;\n      },\n    };\n\n    const handleMouseMove = (e) => {\n      let mouseX = e.pageX - window.innerWidth / 2;\n      let mouseY = e.pageY - window.innerHeight / 2;\n\n      cube.rotation.x = mouseY / 200;\n      cube.rotation.y = mouseX / 200;\n    };\n\n    // WATCHERS\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    textureWidthSlider.current.addEventListener(\"change\", changeTexture.width);\n    textureHeightSlider.current.addEventListener(\n      \"change\",\n      changeTexture.height\n    );\n    textureTextInput.current.addEventListener(\"change\", changeTexture.text);\n    speedSlider.current.addEventListener(\"change\", changeTexture.handleSpeed);\n\n    return () => {\n      console.log(\"**CURSOR UNMOUNTED**\");\n    };\n  }, []);\n\n  const Inputs = () => {\n    return (\n      <>\n        <Input\n          type=\"range\"\n          ref={textureWidthSlider}\n          label=\"Width\"\n          min=\"1\"\n          max=\"20\"\n          val=\"2\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureHeightSlider}\n          label=\"Height\"\n          min=\"1\"\n          max=\"20\"\n          val=\"3\"\n        />\n        <Input type=\"text\" ref={textureTextInput} label=\"Text\" val=\"YOUCAN\" />\n        <Input\n          type=\"range\"\n          ref={speedSlider}\n          label=\"Speed\"\n          min=\"1\"\n          max=\"100\"\n          val=\"10\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <Navigation\n        inputs={<Inputs />}\n        colors={{\n          main: \"#8e00ff\",\n          second: \"#b3ff42\",\n          third: \"white\",\n        }}\n      />\n      <canvas ref={mount} id=\"c\" />\n    </div>\n  );\n};\n\nexport default Demo6;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport * as THREE from \"three\";\n\nimport Input from \"../components/Input\";\nimport Navigation from \"../components/Navigation\";\n\nimport { generateTexture } from \"../utils\";\n\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n\nconst newColors = {\n  main: \"#2b3439\",\n  second: \"#d2ff1f\",\n};\n\nconst Demo7 = () => {\n  const mount = React.useRef(null);\n  const textureWidthSlider = React.useRef(null);\n  const textureHeightSlider = React.useRef(null);\n  const textureTextInput = React.useRef(null);\n  const speedSlider = React.useRef(null);\n\n  React.useEffect(() => {\n    const canvas = mount.current;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    const scene = new THREE.Scene();\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: false,\n      alpha: true,\n    });\n\n    // PROPS\n    let planeProps = {\n      width: 80,\n      height: 60,\n      poligons: 14,\n    };\n\n    let textureProps = {\n      speed: 0.005,\n      height: 4,\n      width: 3,\n    };\n\n    // TEXTURE\n    const planeTexture = new THREE.Texture(\n      generateTexture(\n        textureTextInput.current.value,\n        newColors.main,\n        newColors.second,\n        1000\n      )\n    );\n\n    planeTexture.needsUpdate = true;\n    planeTexture.wrapS = THREE.RepeatWrapping;\n    planeTexture.wrapT = THREE.RepeatWrapping;\n    planeTexture.repeat.set(textureProps.height, textureProps.width);\n    const planeMaterial = new THREE.MeshLambertMaterial({\n      map: planeTexture,\n    });\n    planeTexture.rotation = 0.3;\n\n    // OBJECT\n    const geometry = new THREE.PlaneBufferGeometry(\n      planeProps.width,\n      planeProps.height,\n      planeProps.poligons * 1.2,\n      planeProps.poligons\n    );\n\n    const plane = new THREE.Mesh(geometry, planeMaterial);\n\n    var peak = 10;\n    var vertices = plane.geometry.attributes.position.array;\n    for (var i = 0; i <= vertices.length; i += 3) {\n      vertices[i + 2] = peak * Math.random();\n    }\n\n    scene.add(plane);\n\n    // CAMERA\n    const camera = new THREE.PerspectiveCamera(80, width / height, 1, 2000);\n    camera.position.z = 16;\n\n    // LIGHT\n    const light = new THREE.AmbientLight(\"rgb(100%, 100%, 100%)\", 1, 1500);\n    light.position.set(0, 0, 0);\n    scene.add(light);\n\n    // SCENE\n    renderer.setSize(width, height);\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    // FUNCTIONS\n    const animate = () => {\n      requestAnimationFrame(animate);\n      planeTexture.offset.x -= textureProps.speed / 2;\n      planeTexture.offset.y += textureProps.speed;\n      // planeTexture.rotation -= textureProps.speed / 2;\n      // camera.rotation.z += 0.001;\n      renderScene();\n    };\n\n    // INIT\n    animate();\n\n    // RESIZE\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    // TEXTURE CHANGES\n    const changeTexture = {\n      width: (e) => {\n        textureProps.width = e.target.value;\n        planeTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      height: (e) => {\n        textureProps.height = e.target.value;\n        planeTexture.repeat.set(textureProps.width, textureProps.height);\n      },\n      text: (e) => {\n        planeMaterial.map.image = generateTexture(\n          e.target.value,\n          newColors.main,\n          newColors.second,\n          1000\n        );\n        planeMaterial.map.needsUpdate = true;\n      },\n      handleSpeed: (e) => {\n        textureProps.speed = e.target.value / 1500;\n      },\n    };\n\n    const handleMouseMove = (e) => {\n      let mouseX = e.pageX - window.innerWidth / 2;\n      let mouseY = e.pageY - window.innerHeight / 2;\n\n      plane.rotation.x = mouseY / 1000;\n      plane.rotation.z = (mouseY + mouseX) / 6000;\n      plane.rotation.y = mouseX / 10000;\n    };\n\n    // WATCHERS\n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    textureWidthSlider.current.addEventListener(\"change\", changeTexture.width);\n    textureHeightSlider.current.addEventListener(\n      \"change\",\n      changeTexture.height\n    );\n    textureTextInput.current.addEventListener(\"change\", changeTexture.text);\n    speedSlider.current.addEventListener(\"change\", changeTexture.handleSpeed);\n\n    return () => {\n      console.log(\"**CURSOR UNMOUNTED**\");\n    };\n  }, []);\n\n  const Inputs = () => {\n    return (\n      <>\n        <Input\n          type=\"range\"\n          ref={textureWidthSlider}\n          label=\"Width\"\n          min=\"1\"\n          max=\"20\"\n          val=\"3\"\n        />\n        <Input\n          type=\"range\"\n          ref={textureHeightSlider}\n          label=\"Height\"\n          min=\"1\"\n          max=\"20\"\n          val=\"4\"\n        />\n        <Input type=\"text\" ref={textureTextInput} label=\"Text\" val=\"YOUCAN\" />\n        <Input\n          type=\"range\"\n          ref={speedSlider}\n          label=\"Speed\"\n          min=\"1\"\n          max=\"100\"\n          val=\"10\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <Navigation\n        inputs={<Inputs />}\n        colors={{\n          main: \"#1d211f\",\n          second: newColors.second,\n          third: \"white\",\n        }}\n      />\n      <canvas ref={mount} id=\"c\" />\n    </div>\n  );\n};\n\nexport default Demo7;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styles from \"./app.module.scss\";\n\nimport Demo1 from \"./demo1\";\nimport Demo2 from \"./demo2\";\nimport Demo3 from \"./demo3\";\nimport Demo4 from \"./demo4\";\nimport Demo5 from \"./demo5\";\nimport Demo6 from \"./demo6\";\nimport Demo7 from \"./demo7\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Router>\n        <Switch>\n          <Route path=\"/waterfall\">\n            <Demo7 />\n          </Route>\n          <Route path=\"/cube\">\n            <Demo6 />\n          </Route>\n          <Route path=\"/sphere\">\n            <Demo5 />\n          </Route>\n          <Route path=\"/spiral\">\n            <Demo4 />\n          </Route>\n          <Route path=\"/donutstripes\">\n            <Demo3 />\n          </Route>\n          <Route path=\"/donut\">\n            <Demo2 />\n          </Route>\n          <Route path={[\"/torusknot\", \"/\"]}>\n            <Demo1 />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}